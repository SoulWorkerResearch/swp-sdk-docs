import{_ as n,d as s}from"./app.4b015752.js";const a={},p=s(`<h1 id="create-plugin" tabindex="-1"><a class="header-anchor" href="#create-plugin" aria-hidden="true">#</a> Create plugin</h1><blockquote><p>Please, dont use DllMain.<br> This is fraught with unintended consequences.</p></blockquote><h2 id="setup-project" tabindex="-1"><a class="header-anchor" href="#setup-project" aria-hidden="true">#</a> Setup project</h2><ul><li><p><strong>Step 0:</strong> Add sdk</p><ul><li>Menu bar -&gt; File</li><li>Add -&gt; Existing project...</li><li>Add <code>swp-sdk.vcxitems</code></li></ul></li><li><p><strong>Step 1:</strong> Add sdk path</p><ul><li>Goto project settings</li><li>C/C++</li><li>General</li><li>Add <code>$(SolutionDir)swp-sdk\\headers;</code> into <code>Additional Include Directories</code></li></ul></li></ul><h2 id="write-plugin" tabindex="-1"><a class="header-anchor" href="#write-plugin" aria-hidden="true">#</a> Write plugin</h2><ul><li><strong>Step 0:</strong> Create main class</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;swpsdk/plugin/plugin_base.hpp&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;spdlog/spdlog.h&gt;</span></span>

<span class="token keyword">class</span> <span class="token class-name">you_plugin_name</span> <span class="token keyword">final</span> <span class="token operator">:</span> <span class="token keyword">public</span> swpsdk<span class="token double-colon punctuation">::</span>plugin<span class="token double-colon punctuation">::</span>base<span class="token operator">&lt;</span>you_plugin_name<span class="token operator">&gt;</span>
<span class="token punctuation">{</span>
  <span class="token comment">// This method will be called when plugin redy to execute.</span>
  <span class="token keyword">auto</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">-&gt;</span> <span class="token keyword">void</span> <span class="token keyword">override</span>
  <span class="token punctuation">{</span>
    <span class="token comment">// Log message</span>
    spdlog<span class="token double-colon punctuation">::</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;hello, world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><strong>Step 1:</strong> Register plugin</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;swpsdk/plugin/attach.hpp&gt;</span></span>

<span class="token keyword">auto</span> swpsdk<span class="token double-colon punctuation">::</span>plugin<span class="token double-colon punctuation">::</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span>swpsdk<span class="token double-colon punctuation">::</span>plugin<span class="token double-colon punctuation">::</span>info<span class="token operator">*</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> swpsdk<span class="token double-colon punctuation">::</span>plugin<span class="token double-colon punctuation">::</span>info<span class="token punctuation">{</span>
    <span class="token comment">// Write here game version</span>
    <span class="token punctuation">.</span>game_version <span class="token operator">=</span> version<span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// Write here version of you plugin</span>
    <span class="token punctuation">.</span>plugin_version <span class="token operator">=</span> version<span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// Base class have singleton instance of you class</span>
    <span class="token punctuation">.</span>instance <span class="token operator">=</span> <span class="token operator">&amp;</span>you_plugin_name<span class="token double-colon punctuation">::</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,9);function e(t,o){return p}var c=n(a,[["render",e],["__file","create.html.vue"]]);export{c as default};
